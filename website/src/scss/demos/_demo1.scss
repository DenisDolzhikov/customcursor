.demo-1 {
  --color-text: #fff;
  --color-bg: #171717;
  --color-link: #19caff;
  --color-link-hover: #19caff;
  --color-info: #19caff;
  cursor: none;
  a {
    cursor: none;
  }
}

.grid {
  position: absolute;
  padding: calc(1.5em + 42px + 1.5em) 1.5em;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.grid {
  img {
    max-width: 100%;
    height: auto;
    line-height: 0;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.3s ease;
    &.lazyloaded {
      opacity: 1;
    }
  }
}

.grid__inner {
  display: flex;
  flex-wrap: wrap;
  align-content: flex-start;
  justify-content: space-between;
  transition: opacity 0.2s ease;
  width: 100%;
}

.grid__item {
  flex: 0 0 calc(97% * 2 / 5);
  line-height: 0;
  margin-bottom: 3%;
  cursor: none;
  a {
    cursor: none;
  }
  &:nth-child(3),
  &:nth-child(4) {
    margin-bottom: 0;
  }
  a {
    display: block;
    height: 0;
    padding-top: 100%;
    position: relative;
    background-color: #1d1d1d;
  }
}

.grid__item--wide {
  flex: 0 0 calc(97% * 3 / 5);
  a {
    padding-top: calc(100% / 3 * 2);
  }
}

.cursor-wrapper {
  position: fixed;
  opacity: 0;
  width: 100px;
  height: 100px;
  left: 0;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 999999999;
  pointer-events: none;
  // border: 1px solid var(--color-link);
  &.has-blend-mode {
    mix-blend-mode: exclusion;
  }
}

.custom-cursor {
  position: relative;
  left: 0;
  top: 0;

  &__outer {
    width: 6px;
    height: 6px;
    border: 2px solid white;
    background: white;
    border-radius: 50%;
  }

  &__inner {
    position: relative;
    width: 100%;
    height: 100%;
    &:before,
    &:after {
      content: "";
      position: absolute;
      width: 40%;
      height: 1px;
      background: white;
      transition: transform 0.1s linear;
    }
    &:before {
      left: 50%;
      top: 50%;
      transform: translateX(-50%);
    }
    &:after {
      left: 50%;
      top: 50%;
      transform: translateX(-50%) rotate(-90deg);
    }
    &.is-closing:after {
      transform: translateX(-50%) rotate(0deg);
    }
  }
}
